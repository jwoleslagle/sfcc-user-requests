service: sfcc-user-requests
custom:
  dynamodb:
    start:
      port: 8000
      migrate: true #creates table fresh with each run
      inMemory: true
    onStart: true
  assets:
    auto: true
    targets:
      - bucket: 
          Ref: WebAppBucket
        files:
        - source: ./src/webapp/
          globs: '*'
provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1
  environment:
    REQUESTS_TABLE: ${self:service}-${self.opt, self:provider.stage}-rqsts
    S3_UPLOAD_BUCKET:
      Ref: UploadsBucket
    API_INVOKE_URL: https://n6d16pkfx9.execute-api.us-east-1.amazonaws.com/dev
    SRC_EMAIL: jwoleslagle@gmail.com
    DEST_EMAIL: jwoleslagle@gmail.com
  stackTags: # Tags to comply with Cloud Engineering requirements
    owner: jeffrey.woleslagle@hbc.com
    environment: production
    projectname: SFCC Production Support
    application: SFCC
    exposure: private
    portfolio: Non-portfolio
    compliance: non-sensitive
    projectcode: CR-XXXXX
    banner: ent
  iamRoleStatements:
    - Effect: Allow
      Action: 
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "*"
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:PutObjectAcl
        - s3:GetObject
        - s3:DeleteObject
      Resource: "*"
      #Resource: "arn:aws:s3:::${self:provider.environment.S3_UPLOAD_BUCKET}/*"
    - Effect: Allow
      Action:
        - ses:SendEmail
        - ses:SendRawEmail
      Resource: "*"
      #Resource: "arn:aws:ses:us-east-1:123456789012:identity/example.com"
    - Effect: Allow
      Action:
        - s3:ListBucket
      Resource: "*"
      #Resource: "arn:aws:s3:::${self:provider.environment.S3_UPLOAD_BUCKET}/*"
plugins:
  - serverless-offline
  - serverless-dynamodb-local
  - serverless-s3-deploy
functions:
  healthcheck:
    handler: src/rqsts/healthcheck.handler
    events:
      - http:
          method: GET
          path: /ping
  listRqsts:
    handler: src/rqsts/list.handler
    events:
      - http:
          method: GET
          path: /rqsts
  createRqsts:
    handler: src/rqsts/create.handler
    events:
      - http:
          method: POST
          path: /rqsts
  getRqsts:
    handler: src/rqsts/findone.handler
    events:
      - http:
          method: GET
          path: /rqsts/{id}
          request:
            parameters:
              id: true
  deleteRqst:
    handler: src/rqsts/delete.handler
    events:
      - http:
          method: DELETE
          path: /rqsts/{id}
          request:
            parameters:
              id: true
  updateRqst:
    handler: src/rqsts/update.handler
    events:
      - http:
          method: PUT
          path: /rqsts/{id}
          request:
            parameters:
              id: true
  sendSignedUrl:
    handler: src/send/send.handler
    events:
      - http:
          method: POST
          path: /send
          request:
            parameters:
              fname: true
  sendHealthcheck:
    handler: src/send/sendHealthcheck.handler
    events:
      - http:
          method: GET
          path: /send
  upload:
    handler: src/upld/upld.handler
    events:
      - http:
          method: POST
          path: /upld
  upldHealthcheck:
    handler: src/upld/upldHealthcheck.handler
    events:
      - http:
          method: GET
          path: /upld
  validateAndPush:
    handler: src/push/push.handler
    events:
      - http:
          method: POST
          path: /push
resources:
  # DynamoDB
  - ${file(resources/dynamodb.yml)}
  # S3
  - ${file(resources/uploads-s3.yml)}
  - ${file(resources/webapp-s3.yml)}